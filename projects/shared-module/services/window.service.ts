import { FeatureComponent } from './../utils/enums';
import { Injectable, isDevMode } from '@angular/core';
import { Mapping } from '../utils/types/types';

@Injectable()
export class WindowService {
    constructor(private window: Window) {}
    claimBuilderLabel: string =
        '{"ClaimBuilder.BulkClaimHistory.AwardedAmount.Label":"AwardedAmount","ClaimBuilder.BulkClaimHistory.ClaimDate.Label":"Claim Date","ClaimBuilder.BulkClaimHistory.ClaimedAmount.Label":"ClaimedAmount","ClaimBuilder.BulkClaimHistory.FileName.Label":"FileName","ClaimBuilder.BulkClaimHistory.Month.Label":"Month","ClaimBuilder.BulkClaimHistory.PageTitle":"Bulk Claim History","ClaimBuilder.BulkClaimHistory.ReferenceId.Label":"Reference Id","ClaimBuilder.BulkClaimHistory.Status.Label":"Status","ClaimBuilder.BulkClaimSummary.Amount.Label":"Amount","ClaimBuilder.BulkClaimSummary.BulkClaimHistory":"Bulk Claim History","ClaimBuilder.BulkClaimSummary.BulkClaimSubmitted":"Bulk Claim Submitted!","ClaimBuilder.BulkClaimSummary.BulkClaimSummary":"Bulk Claim Summary","ClaimBuilder.BulkClaimSummary.Claims.Label":"Claims","ClaimBuilder.BulkClaimSummary.Invoices.Label":"Invoices","ClaimBuilder.BulkClaimSummary.Pagetitle":"Bulk Claim Upload","ClaimBuilder.BulkClaimSummary.Queued.Label":"Queued","ClaimBuilder.BulkClaimSummary.ReferenceId.Label":"Reference Id","ClaimBuilder.BulkClaimSummary.SKUs.Label":"SKUs","ClaimBuilder.BulkClaimSummary.Status.Label":"Status","ClaimBuilder.BulkClaimSummary.SubmitAnotherClaim.Label":"Submit Another Claim","ClaimBuilder.BulkClaimSummary.TotalPoints.Label":"Total Points:","ClaimBuilder.BulkClaimUpload.BulkClaimHistory":"Bulk Claim History","ClaimBuilder.BulkClaimUpload.BulkSummary.RemoveFile":"Remove File","ClaimBuilder.BulkClaimUpload.ClaimsUpload.ClaimsProcessingInfo":"Once submitted, your claims will be processed within 24 hours and you will receive a confirmation email outl your upload details","ClaimBuilder.BulkClaimUpload.Common.Cancel":"Cancel","ClaimBuilder.BulkClaimUpload.Common.ClickHere":"Click Here","ClaimBuilder.BulkClaimUpload.Common.DownloadTemplate":"Download Template","ClaimBuilder.BulkClaimUpload.Common.FileFormatsAndSize":"Acceptable Formats: XLSX, Max upload size: 25MB","ClaimBuilder.BulkClaimUpload.Common.FileUpload.Browse":"browse","ClaimBuilder.BulkClaimUpload.Common.FileUpload.DragAndDropLabel":"Drag & drop File to upload or","ClaimBuilder.BulkClaimUpload.Common.ForMoreInfo":"for more info","ClaimBuilder.BulkClaimUpload.Common.InvoiceMonth":"Invoice Month:","ClaimBuilder.BulkClaimUpload.Common.Submit":"Submit","ClaimBuilder.BulkClaimUpload.DownloadFile.DownloadFailedMessage":"Error downloading the file","ClaimBuilder.BulkClaimUpload.DownloadFile.DownloadSuccessMessage":"File downloaded successfully","ClaimBuilder.BulkClaimUpload.ErrorMessage.ConflictInvoice":"Different information found for same invoice number on other records","ClaimBuilder.BulkClaimUpload.ErrorMessage.DuplicateInvoice":"Duplicate found with the same invoice number. Combine same SKUs with multiple quantity.","ClaimBuilder.BulkClaimUpload.File.Label":"Label","ClaimBuilder.BulkClaimUpload.SubmitBulkClaim":"Submit Bulk Claim?","ClaimBuilder.BulkClaimUpload.ValidationStates.InvalidFile":"An error occurred while validating the file. This could be due to the invalid format of the file, please fix the file and try again.","ClaimBuilder.BulkClaimUpload.ValidationStates.MissingParameters":"Invoice month and bulk upload file are required.","ClaimBuilder.BulkClaimUpload.ValidationStates.MultipleFilesError":"You are allowed to select only one file at a time","ClaimBuilder.BulkClaimUpload.ValidationStates.UploadError":"There was an unexpected error submitting the file. Please try again.","ClaimBuilder.BulkClaimUpload.ValidationStates.ValidationError":"Some errors were found with your file.","ClaimBuilder.BulkClaimUpload.ValidationStates.ValidationSuccessful":"File validated successfully! No e found. Please click submit to proceed.","ClaimBuilder.ClaimConfirm.Details.Label":"Details","ClaimBuilder.ClaimConfirm.Error.SavingClaim":"An error occurred while saving the claim. Please try again.","ClaimBuilder.ClaimConfirm.Notes&Attachments.Label":"Notes & Attachments","ClaimBuilder.ClaimConfirm.ReviewClaim.Label":"Review Claim","ClaimBuilder.ClaimConfirm.ReviewClaim.Message":"Review all your claim details here.","ClaimBuilder.ClaimSetup.AddProduct":"Add Product","ClaimBuilder.ClaimSetup.ClaimInfo.Label":"Claim Info","ClaimBuilder.ClaimSetup.FillRequiredDetails":"Please fill in the required fields highlighted below to continue.","ClaimBuilder.ClaimSetup.InvoiceForm.DeliveryDate.Label":"Delivery Date","ClaimBuilder.ClaimSetup.InvoiceForm.Industry.Label":"Vertical/Industry","ClaimBuilder.ClaimSetup.InvoiceForm.InvoiceDate.Label":"Invoice Date","ClaimBuilder.ClaimSetup.InvoiceForm.Order.Label":"Order / Invoice Number","ClaimBuilder.ClaimSetup.InvoiceForm.RemoveProducts.Label":"Remove Products?","ClaimBuilder.ClaimSetup.InvoiceForm.RemoveProducts.Message":"Changing the Invoice Date will remove all the Products you have added to your claim. Do you wish to continue?","ClaimBuilder.ClaimSetup.InvoiceForm.SalesManager.Label":"Sales Manager","ClaimBuilder.ClaimSetup.InvoiceForm.SelectIndustry.OptionLabel":"Select Vertical/Industry","ClaimBuilder.ClaimSetup.InvoiceForm.SelectSalesManager.OptionLabel":"Select Sales Manager","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.DateBetween":"Date must be between","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.DateRequired":"Date is required","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.DeliveryDateRequired":"Delivery Date is required","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.IndustryRequired":"Industry is required","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.PORequired":"PO is required","ClaimBuilder.ClaimSetup.InvoiceForm.Validation.SalesManagerRequired":"Sales Manager is required","ClaimBuilder.ClaimSetup.PageTitle":"Set Up Your Claim","ClaimBuilder.ClaimSetup.SerialNumbers.Label":"Serial Numbers","ClaimBuilder.ClaimSetup.SoldTo.City.Label":"City","ClaimBuilder.ClaimSetup.SoldTo.Clear.Label":"Clear","ClaimBuilder.ClaimSetup.SoldTo.Consumer.Label":"Consumer","ClaimBuilder.ClaimSetup.SoldTo.ConsumerName.Label":"Consumer Name","ClaimBuilder.ClaimSetup.SoldTo.ContactPerson.Label":"Contact Person","ClaimBuilder.ClaimSetup.SoldTo.Country.Label":"Country","ClaimBuilder.ClaimSetup.SoldTo.CountryOptionLabel":"Select Country","ClaimBuilder.ClaimSetup.SoldTo.Extension.Label":"Ext.","ClaimBuilder.ClaimSetup.SoldTo.Lock.Label":"Lock","ClaimBuilder.ClaimSetup.SoldTo.Phone.Label":"Phone (###-###-####)","ClaimBuilder.ClaimSetup.SoldTo.PostalCode.Label":"Zip/Postal Code","ClaimBuilder.ClaimSetup.SoldTo.State.Label":"Province/State","ClaimBuilder.ClaimSetup.SoldTo.StateOptionLabel":"Select Province/State","ClaimBuilder.ClaimSetup.SoldTo.Street.Label":"Street","ClaimBuilder.ClaimSetup.SoldTo.Suite.Label":"Suite","ClaimBuilder.ClaimSetup.SoldTo.Unlock.Label":"Unlock","ClaimBuilder.ClaimSetup.SoldTo.Validation.CityRequired":"City is required","ClaimBuilder.ClaimSetup.SoldTo.Validation.ConsumerExistErrorMessage":"Entered consumer already exists, Please select one from the typeahead above!","ClaimBuilder.ClaimSetup.SoldTo.Validation.ConsumerNameRequired":"Consumer Name is required","ClaimBuilder.ClaimSetup.SoldTo.Validation.StateRequired":"Province/State is required","ClaimBuilder.ClaimSetup.SoldTo.Validation.StreetRequired":"Street is required","ClaimBuilder.ClaimSetup.SoldTo.Validation.ValidExtension":"Enter a Valid Extension","ClaimBuilder.ClaimSetup.SoldTo.Validation.ValidPhone":"Enter a Valid Phone #","ClaimBuilder.ClaimSetup.SoldTo.Validation.ValidZipCode":"Enter a Valid Zip/Postal Code","ClaimBuilder.ClaimSetup.SoldTo.Validation.ZipCodeRequired":"Zip / PostalCode is required","ClaimBuilder.ClaimSetup.Validation.CompanyAlreadyExist.ErrorMessage":"An error occurred while saving the claim. Please try again.","ClaimBuilder.ClaimSetup.Validation.InvoiceDateRequired.ErrorMessage":"Start your claim below. Please note, Products cannot be added  an Invoice Date has been selected.","ClaimBuilder.ClaimShare.Common.Add.Label":"Add","ClaimBuilder.ClaimShare.Common.Dollars.Label":"Dollars","ClaimBuilder.ClaimShare.Common.Percent.Label":"Percent","ClaimBuilder.ClaimShare.Common.User.Label":"User","ClaimBuilder.ClaimShare.Error.SavingClaim":"There was an error saving the claim.Please try again","ClaimBuilder.ClaimShare.FindUser.Label":"Find User","ClaimBuilder.ClaimShare.Searching.Label":"searching...","ClaimBuilder.ClaimShare.ShareOptionDisclaimer":"Share Option Disclaimer: This option is available as needed, but not required","ClaimBuilder.ClaimShare.ShareYourClaim.PageTitle":"Share Your Claim","ClaimBuilder.ClaimShare.Validation.TotalValidPercentageInteger":"Percentage should be a valid integer between 1 and99. Total cannot exceed 100%.","ClaimBuilder.ClaimShare.Validation.ValidPercentageInteger":"Percentage should be a valid integer between 1 and 99.","ClaimBuilder.ClaimShare.Validation.ValidPercentageIntegerOver100":" Total cannot exceed 100%.","ClaimBuilder.ClaimShare.Validations.SuggestionNotLoaded":"Sorry, suggestions could not be loaded.","ClaimBuilder.ClaimsInProgress.AreYouSure":"Are you sure?","ClaimBuilder.ClaimsInProgress.ClaimType.Label":"Claim Type","ClaimBuilder.ClaimsInProgress.DateCreated.Label":"Date Created","ClaimBuilder.ClaimsInProgress.Delete.Label":"Delete","ClaimBuilder.ClaimsInProgress.DeletingClaimProgressMessage":"Your claim in progress will be deleted, are you sure you want to proceed?","ClaimBuilder.ClaimsInProgress.Dollars.Label":"Dollars","ClaimBuilder.ClaimsInProgress.Error.DeletingDraftClaim":"An error occurred while deleting your draft claim,please gain.","ClaimBuilder.ClaimsInProgress.Error.GettingDraftClaim":"An error occurred while getting your draft claims,please gain later.","ClaimBuilder.ClaimsInProgress.LastUpdated.Label":"Last Updated","ClaimBuilder.ClaimsInProgress.PageTitle":"Claims In Progress","ClaimBuilder.ClaimsInProgress.PurchaseOrder":"Purchase Order","ClaimBuilder.ClaimStepper.AutoSaveComplete":"Claim autosave complete!","ClaimBuilder.ClaimStepper.Back.Label":"Back","ClaimBuilder.ClaimStepper.Cancel.Label":"Cancel","ClaimBuilder.ClaimStepper.Claims.SentForProcessing":"Your claim will be sent for processing and you will receive a Claim ID.","ClaimBuilder.ClaimStepper.ClaimSavedMessage":"Your claim is now saved! You can exit and return to this claim at any time.","ClaimBuilder.ClaimStepper.Close.Label":"Close","ClaimBuilder.ClaimStepper.Done.Label":"done","ClaimBuilder.ClaimStepper.Next.Label":"Next","ClaimBuilder.ClaimStepper.Review.Label":"Review","ClaimBuilder.ClaimStepper.SetUp.Label":"Set Up","ClaimBuilder.ClaimStepper.Share.Label":"Share","ClaimBuilder.ClaimStepper.Submit.Label":"Submit","ClaimBuilder.ClaimStepper.SubmitYourClaim.Label":"Submit Your Claim?","ClaimBuilder.ClaimStepper.Upload.Label":"Upload","ClaimBuilder.ClaimSubmit.Claim.Label":"Your claim {0} was successfully submitted!","ClaimBuilder.ClaimSubmit.ClaimHistory":"Claim History","ClaimBuilder.ClaimSubmit.Details.Label":"Details","ClaimBuilder.ClaimSubmit.Notes&Attachment.Label":"Notes & Attachments","ClaimBuilder.InvoiceCard.Consumer.Label":"Consumer","ClaimBuilder.InvoiceCard.ContactPerson.Label":"Contact Person","ClaimBuilder.InvoiceCard.InvoiceDate.Label":"Invoice Date","ClaimBuilder.InvoiceCard.InvoiceFiles.Label":"Invoice File(s)","ClaimBuilder.InvoiceCard.InvoiceNumber.Label":"Invoice Number(s)","ClaimBuilder.InvoiceCard.Phone.Label":"Phone","ClaimBuilder.InvoiceCard.PurchaseOrder.Label":"Purchase Order","ClaimBuilder.InvoiceFiles.Invoice.Label":"Invoice!","ClaimBuilder.InvoiceFiles.Times.Label":"&times;","ClaimBuilder.InvoiceUpload.ClickHere":"click here","ClaimBuilder.InvoiceUpload.Drag&Drop.Label":"Drag & drop files or","ClaimBuilder.InvoiceUpload.Error.InvoiceDeletedErrorMessage":"An error occurred while trying to delete the invoice. Please try again.","ClaimBuilder.InvoiceUpload.ForMoreInfo":"for more info.","ClaimBuilder.InvoiceUpload.InvoiceAcceptableFormat":"Acceptable Formats: PDF, JPG, JPEG, PNG. Max upload size: 20MB","ClaimBuilder.InvoiceUpload.InvoiceDeleted":"Invoice was deleted successfully.","ClaimBuilder.InvoiceUpload.InvoiceNumber.Label":"Invoice Number","ClaimBuilder.InvoiceUpload.InvoiceToContinue":"Please upload an invoice to continue.","ClaimBuilder.InvoiceUpload.Optional.Label":"(Optional)","ClaimBuilder.InvoiceUpload.ProofOfSale":"Provide your proof of sale.","ClaimBuilder.InvoiceUpload.UploadInvoice.Label":"Upload Invoice","ClaimBuilder.InvoiceUpload.Validation.Error":"Error","ClaimBuilder.InvoiceUpload.Validation.InvoiceNumberRequired":"Invoice Number is required","ClaimBuilder.InvoiceUpload.Validation.UploadErrors":"Upload Errors","ClaimBuilder.Notes&Attachment.Actions.Label":"Actions","ClaimBuilder.Notes&Attachment.AttachFile.Label":"Attach File","ClaimBuilder.Notes&Attachment.ChooseFile.Label":"Choose file","ClaimBuilder.Notes&Attachment.ClearAll.Label":"Clear All","ClaimBuilder.Notes&Attachment.Date.Label":"Date","ClaimBuilder.Notes&Attachment.Note.Label":"Note","ClaimBuilder.Notes&Attachment.Validations.AddNotesErrorMessage":"An error occured while add note/attachments, please try again.","ClaimBuilder.Notes&Attachment.Validations.MaxLength":"Max length: 250 characters","ClaimBuilder.Notes&Attachment.Validations.MaxLength250Char":"250 characters","ClaimBuilder.Notes&Attachment.Validations.NoteRequired":"Please add a note, it is required to be able to add an attachment.","ClaimBuilder.Notes&Attachment.View.Label":"View","ClaimBuilder.NotFound.Code":"404","ClaimBuilder.NotFound.Message":"The page you requested was not found.","claimbuilder.page.title":"Sales Claim Builder","ClaimBuilder.SKUSearch.AddProduct":"Please add a Product to continue.","ClaimBuilder.SKUSearch.ChooseFile.Label":"Choose file","ClaimBuilder.SKUSearch.ClaimInfo.AreYouSure.Label":"Are you sure?","ClaimBuilder.SKUSearch.ClaimInfo.AwardedDollars.Label":"Awarded Dollars","ClaimBuilder.SKUSearch.ClaimInfo.BonusIncentives.Label":"Bonus Incentives","ClaimBuilder.SKUSearch.ClaimInfo.ClaimTotal.Label":"Claim Total","ClaimBuilder.SKUSearch.ClaimInfo.Dollars.Label":"Dollars","ClaimBuilder.SKUSearch.ClaimInfo.Items.Label":"Items","ClaimBuilder.SKUSearch.ClaimInfo.Name.Label":"Name","ClaimBuilder.SKUSearch.ClaimInfo.Product.Label":"Product","ClaimBuilder.SKUSearch.ClaimInfo.Quantity.Label":"Qty.","ClaimBuilder.SKUSearch.ClaimInfo.Remove.Label":"Remove","ClaimBuilder.SKUSearch.ClaimInfo.RemoveAll.Label":"Remove all","ClaimBuilder.SKUSearch.ClaimInfo.Share.Label":"Share","ClaimBuilder.SKUSearch.ClaimInfo.Shares.Label":"Shares","ClaimBuilder.SKUSearch.ClaimInfo.SubmittedDollars.Label":"Submitted Dollars","ClaimBuilder.SKUSearch.DownloadSkuTemplate.TemplateFileName":"SKU_Upload_Template.xlsx","ClaimBuilder.SKUSearch.DownloadSkuTemplate.TemplateName":"downloadSkuTemplate","ClaimBuilder.SKUSearch.DownloadTemplate.Label":"Download template","ClaimBuilder.SKUSearch.FileError":"Some errors were found with your file.","ClaimBuilder.SKUSearch.InvalidSKU.Label":"Invalid SKUs","ClaimBuilder.SKUSearch.NumberValidation.SerialNumber.Label":"Serial Number","ClaimBuilder.SKUSearch.NumberValidation.SerialNumberAlreadyClaimed":"Serial number has already been claimed.","ClaimBuilder.SKUSearch.NumberValidation.SerialNumberNotFound":"Serial number not found. Please try again.","ClaimBuilder.SKUSearch.NumberValidation.SerialNumberNotMatch":"Serial number does not match this SKU.","ClaimBuilder.SKUSearch.NumberValidation.SerialNumberRequired":"Serial number is required.","ClaimBuilder.SKUSearch.NumberValidation.SKU.Label":"SKU","ClaimBuilder.SKUSearch.NumberValidation.Validate":"Validate","ClaimBuilder.SKUSearch.NumberValidation.ValidSerialNumber":"Valid serial number","ClaimBuilder.SKUSearch.OR.Label":"OR","ClaimBuilder.SKUSearch.Product.Label":"Product","ClaimBuilder.SKUSearch.ProductUploadSuccessful":"Product upload was successful!","ClaimBuilder.SKUSearch.Quantity.Label":"Quantity","ClaimBuilder.SKUSearch.Search.Label":"Search:","ClaimBuilder.SKUSearch.SuggestionsNotLoaded":"Sorry, suggestions could not be loaded.","ClaimBuilder.SKUSearch.UnSupportedFileFormat.ErrorMessage":"Unsupported file format for template, please try again with .xlsx file format","ClaimBuilder.SKUSearch.UploadFile.Label":"Upload file","ClaimBuilder.BulkClaimUpload.Common.downloadCapReport": "Cap Report","ClaimBuilder.BulkClaimUpload.Common.label.CapsReportDownload":"Caps Report Download","ClaimBuilder.BulkClaimUpload.Common.label.Date":"Date:","ClaimBuilder.BulkClaimUpload.Common.label.Frequency": "Frequency","ClaimBuilder.BulkClaimUpload.Common.OccurrencesOptions.Yearly":"Yearly","ClaimBuilder.BulkClaimUpload.Common.OccurrencesOptions.Monthly": "Monthly","ClaimBuilder.BulkClaimUpload.Common.OccurrencesOptions.Quarterly":"Quarterly","ClaimBuilder.BulkClaimUpload.Common.Label.Type":"Type:","ClaimBuilder.BulkClaimUpload.Common.Options.Type":"Select...","ClaimBuilder.BulkClaimUpload.Common.Button.Download":"Download","ClaimBuilder.BulkClaimUpload.Common.Error.NotFound":"There is no data for the options selected. Please try again."}';
    public getSkuQuantityLimit = (): number =>
        (this.window as any).spa.skuQuantityLimit;

    public getIsDeliveryDateEnabled = (): boolean =>
        (this.window as any).spa.deliveryDateEnabled;

    public getFixedPointMinimumInvoiceDate = (): Date =>
        (this.window as any).spa.fixedPointMinimumInvoiceDate;

    public getDaysInPastMinimumInvoiceDateOffset = (): number =>
        (this.window as any).spa.daysInPastMinimumInvoiceDateOffset;

    public getStartupComponent = (): FeatureComponent =>
        +(this.window as any).spa.component;

    public getClaimId = (): number => (this.window as any).spa.claimId;

    public getClaimHistoryRelativeRoute = (): string =>
        (this.window as any).spa.claimHistoryRelativeRoute;

    public setSpaProp = (name: string, value: any): void => {
        let myWindow = this.window as any;
        if (!myWindow.spa) {
            myWindow.spa = {};
        }
        myWindow.spa[name] = value;
    };

    public getUserAgent = (): string =>
        (this.window as any).navigator.userAgent;

    public getLocalStorageItem = (key: string): string =>
        (this.window as any).localStorage.getItem(key);

    public setLocalStorageItem = (key: string, data: string): void => {
        (this.window as any).localStorage.setItem(key, data);
    };

    public getChannelManagerBaseUrl = (): string =>
        (this.window as any).location.origin;

    public getPrmOneBaseUrl = (): string => (this.window as any).spa.prmOneUrl;

    public getIsBulkPartner = (): boolean =>
        (this.window as any).spa.isBulkPartner;

    public getIsCapsEnabled = (): boolean =>
        (this.window as any).spa.capsEnabled;

    public getLabels = (): Mapping<string> => {
        if (isDevMode()) {
            return JSON.parse(this.claimBuilderLabel);
        }
        return (this.window as any).spa.labels;
    };

    public getGlobeTrotterDefaultLocationId = (): number =>
        (this.window as any).spa.globeTrotterDefaultLocationId;

    public getClientThemeName = (): string =>
        (this.window as any).spa.clientThemeName;

    public getMaxShares = (): number => (this.window as any).spa.maxShares;
}
